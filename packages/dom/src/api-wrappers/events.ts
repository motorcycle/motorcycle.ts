import { Dom, StandardEventTypes } from '../'

import { Stream } from '@motorcycle/types'
import { curry2 } from '@typed/functions'

/**
 * Takes an event type and a DomSource and returns a stream of events.
 * 
 * @name event<A = Element, B = Event>>(et: StandardEvents, d: Dom<A, B>): Stream<B>
 * @example
 * import { events } from '@motorcycle/dom'
 * 
 * const clicked$ = event('click', dom)
 */
export const event: EventFn = curry2(function<A = Element, B = Event>(
  et: StandardEventTypes,
  d: Dom<A, B>
): Stream<B> {
  return d.event<B>(et)
})

export interface EventFn {
  <A = Element, B = Event>(et: StandardEventTypes, d: Dom<A, B>): Stream<B>
  <A = Element, B = Event>(et: StandardEventTypes): (d: Dom<A, B>) => Stream<B>
  (et: StandardEventTypes): <A = Element, B = Event>(d: Dom<A, B>) => Stream<B>
}

export const abortEvent = event<Element, UIEvent | ProgressEvent | Event>('abort')
export const afterPrintEvent = event<Element, Event>('afterprint')
export const animationEndEvent = event<Element, AnimationEvent>('animationend')
export const animationIterationEvent = event<Element, AnimationEvent>('animationiteration')
export const animationStartEvent = event<Element, AnimationEvent>('animationstart')
export const audioProcessEvent = event<Element, AudioProcessingEvent>('audioprocess')
export const audioEndEvent = event<Element, Event>('audioend')
export const audioStartEvent = event<Element, Event>('audiostart')
export const beforeUnloadEvent = event<Element, BeforeUnloadEvent>('beforeunload')
export const beginEvent = event<Element, Event>('beginEvent')
export const blockedEvent = event<Element, Event>('blocked')
export const blurEvent = event<Element, FocusEvent>('blur')
export const boundaryEvent = event<Element, SpeechSynthesisEvent>('boundary')
export const cachedEvent = event<Element, Event>('cached')
export const canPlayThroughEvent = event<Element, Event>('canplaythrough')
export const changeEvent = event<Element, Event>('change')
export const chargingChangeEvent = event<Element, Event>('chargingchange')
export const chargingTimeChangeEvent = event<Element, Event>('chargingtimechange')
export const checkingEvent = event<Element, Event>('checking')
export const clickEvent = event<Element, MouseEvent>('click')
export const closeEvent = event<Element, Event>('close')
export const completeEvent = event<Element, OfflineAudioCompletionEvent | Event>('complete')
export const compositionEndEvent = event<Element, CompositionEvent>('compositionend')
export const compositionStartEvent = event<Element, CompositionEvent>('compositionstart')
export const compositionUpdateEvent = event<Element, CompositionEvent>('compositionupdate')
export const contextMenuEvent = event<Element, MouseEvent>('contextmenu')
export const copyEvent = event<Element, ClipboardEvent>('copy')
export const cutEvent = event<Element, ClipboardEvent>('cut')
export const dblclickEvent = event<Element, MouseEvent>('dblclick')
export const deviceChangeEvent = event<Element, Event>('devicechange')
export const deviceLightEvent = event<Element, DeviceLightEvent>('devicelight')
export const deviceMotionEvent = event<Element, DeviceMotionEvent>('devicemotion')
export const deviceOrientationEvent = event<Element, DeviceOrientationEvent>('deviceorientation')
export const deviceProximityEvent = event<Element, DeviceMotionEvent>('deviceproximity')
export const dischargingTimeChangeEvent = event<Element, Event>('dischargingtimechange')
export const downloadedEvent = event<Element, Event>('downloaded')
export const dragEvent = event<Element, DragEvent>('drag')
export const dragEndEvent = event<Element, DragEvent>('dragend')
export const dragEnterEvent = event<Element, DragEvent>('dragenter')
export const dragLeaveEvent = event<Element, DragEvent>('dragleave')
export const dragOverEvent = event<Element, DragEvent>('dragover')
export const dragStartEvent = event<Element, DragEvent>('dragstart')
export const dropEvent = event<Element, DragEvent>('drop')
export const durationChangeEvent = event<Element, Event>('durationchange')
export const emptiedEvent = event<Element, Event>('emptied')
export const endEvent = event<Element, Event | SpeechSynthesisEvent>('end')
export const endedEvent = event<Element, Event>('ended')
export const focusEvent = event<Element, FocusEvent>('focus')
export const fullScreenChangeEvent = event<Element, Event>('fullscreenchange')
export const fullScreenErrorEvent = event<Element, Event>('fullscreenerror')
export const gamepadConnectedEvent = event<Element, GamepadEvent>('gamepadconnected')
export const gamepadDisconnectedEvent = event<Element, GamepadEvent>('gamepaddisconnected')
export const hashChangeEvent = event<Element, HashChangeEvent>('hashchange')
export const lostPointerCaptureEvent = event<Element, PointerEvent>('lostpointercapture')
export const inputEvent = event<Element, Event>('input')
export const invalidEvent = event<Element, Event>('invalid')
export const keyDownEvent = event<Element, KeyboardEvent>('keydown')
export const keyPressEvent = event<Element, KeyboardEvent>('keypress')
export const keyUpEvent = event<Element, KeyboardEvent>('keyup')
export const languageChangeEvent = event<Element, Event>('languagechange')
export const levelChangeEvent = event<Element, Event>('levelchange')
export const loadEvent = event<Element, UIEvent | ProgressEvent>('load')
export const loadedDataEvent = event<Element, Event>('loadeddata')
export const loadedMetadataEvent = event<Element, Event>('loadedmetadata')
export const loadEndEvent = event<Element, ProgressEvent>('loadend')
export const loadStartEvent = event<Element, ProgressEvent>('loadstart')
export const markEvent = event<Element, SpeechSynthesisEvent>('mark')
export const messageEvent = event<Element, MessageEvent | ServiceWorkerMessageEvent>('message')
export const mouseDownEvent = event<Element, MouseEvent>('mousedown')
export const mouseEnterEvent = event<Element, MouseEvent>('mouseenter')
export const mouseLeaveEvent = event<Element, MouseEvent>('mouseleave')
export const mouseMoveEvent = event<Element, MouseEvent>('mousemove')
export const mouseOutEvent = event<Element, MouseEvent>('mouseout')
export const mouseOverEvent = event<Element, MouseEvent>('mouseover')
export const noMatchEvent = event<Element, SpeechSynthesisEvent>('nomatch')
export const notificationClickEvent = event<Element, Event>('notificationclick')
export const noUpdateEvent = event<Element, Event>('noupdate')
export const obsoleteEvent = event<Element, Event>('obsolete')
export const offlineEvent = event<Element, Event>('offline')
export const onlineEvent = event<Element, Event>('online')
export const openEvent = event<Element, Event>('open')
export const orientationChangeEvent = event<Element, Event>('orientationchange')
export const pageShowEvent = event<Element, PageTransitionEvent>('pageshow')
export const pasteEvent = event<Element, ClipboardEvent>('paste')
export const pauseEvent = event<Element, Event | SpeechSynthesisEvent>('pause')
export const pointerCancelEvent = event<Element, PointerEvent>('pointercancel')
export const pointerDownEvent = event<Element, PointerEvent>('pointerdown')
export const pointerLockChangeEvent = event<Element, Event>('pointerlockchange')
export const pointerLockErrorEvent = event<Element, Event>('pointerlockerror')
export const pointerMoveEvent = event<Element, PointerEvent>('pointermove')
export const pointerOutEvent = event<Element, PointerEvent>('pointerout')
export const pointerOverEvent = event<Element, PointerEvent>('pointerover')
export const pointerUpEvent = event<Element, PointerEvent>('pointerup')
export const playEvent = event<Element, Event>('play')
export const playingEvent = event<Element, Event>('playing')
export const popStateEvent = event<Element, PopStateEvent>('popstate')
export const progressEvent = event<Element, ProgressEvent>('progress')
export const pushEvent = event<Element, Event>('push')
export const pushSubscriptionChangeEvent = event<Element, Event>('pushsubscriptionchange')
export const rateChangeEvent = event<Element, Event>('ratechange')
export const readyStateChangeEvent = event<Element, Event>('readystatechange')
export const resetEvent = event<Element, Event>('reset')
export const resizeEvent = event<Element, UIEvent>('resize')
export const resourceTimingBufferFullEvent = event<Element, Event>('resourcetimingbufferfull')
export const resultEvent = event<Element, Event>('result')
export const resumeEvent = event<Element, SpeechSynthesisEvent>('resume')
export const scrollEvent = event<Element, UIEvent>('scroll')
export const seekedEvent = event<Element, Event>('seeked')
export const seekingEvent = event<Element, Event>('seeking')
export const selectEvent = event<Element, UIEvent>('select')
export const selectStartEvent = event<Element, UIEvent>('selectstart')
export const selectionChangeEvent = event<Element, Event>('selectionchange')
export const showEvent = event<Element, MouseEvent>('show')
export const soundEndEvent = event<Element, Event>('soundend')
export const soundStartEvent = event<Element, Event>('soundstart')
export const speechEndEvent = event<Element, Event>('speechend')
export const stalledEvent = event<Element, Event>('stalled')
export const startEvent = event<Element, SpeechSynthesisEvent>('start')
export const storageEvent = event<Element, StorageEvent>('storage')
export const submitEvent = event<Element, Event>('submit')
export const successEvent = event<Element, Event>('success')
export const suspendEvent = event<Element, Event>('suspend')
export const timeoutEvent = event<Element, ProgressEvent>('timeout')
export const timeUpdateEvent = event<Element, Event>('timeupdate')
export const touchCancelEvent = event<Element, TouchEvent>('touchcancel')
export const touchEndEvent = event<Element, TouchEvent>('touchend')
export const touchEnterEvent = event<Element, TouchEvent>('touchenter')
export const touchLeaveEvent = event<Element, TouchEvent>('touchleave')
export const touchMoveEvent = event<Element, TouchEvent>('touchmove')
export const touchStartEvent = event<Element, TouchEvent>('touchstart')
export const transitionEndEvent = event<Element, TransitionEvent>('transitionend')
export const unloadEvent = event<Element, UIEvent>('unload')
export const updateReadyEvent = event<Element, Event>('updateready')
export const upgradeNeededEvent = event<Element, Event>('upgradeneeded')
export const userProximityEvent = event<Element, Event>('userproximity')
export const voicesChangedEvent = event<Element, Event>('voiceschanged')
export const versionChangeEvent = event<Element, Event>('versionchange')
export const visibilityChangeEvent = event<Element, Event>('visibilitychange')
export const volumeChangeEvent = event<Element, Event>('volumechange')
export const vrDisplayConnectedEvent = event<Element, Event>('vrdisplayconnected')
export const vrDisplayDisconnectedEvent = event<Element, Event>('vrdisplaydisconnected')
export const waitingEvent = event<Element, Event>('waiting')
export const wheelEvent = event<Element, WheelEvent>('wheel')
